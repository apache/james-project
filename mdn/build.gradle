/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'java-library'
    id 'scala'
}

configurations {
    tests
}

dependencies {

    implementation project(':james-server:james-server-util')
    implementation project(':javax-mail-extension')

    api 'org.parboiled:parboiled_2.13:2.2.0'

    implementation 'org.apache.james:apache-mime4j-dom:0.8.3'
    implementation 'com.google.guava:guava:25.1-jre'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'javax.activation:javax.activation-api:1.2.0'

    implementation 'org.slf4j:slf4j-api:1.7.27'

    testImplementation 'org.scala-lang.modules:scala-java8-compat_2.13:0.9.0'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.9'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    testImplementation "junit:junit:4.13"
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.5.1'
}

test {
    useJUnitPlatform()
}

// https://stackoverflow.com/questions/23261075/compiling-scala-before-alongside-java-with-gradle
sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
}

description = 'Apache James :: MDN'

tasks.register('testsJar', Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

publishing.publications.maven.artifact(testsJar)
