/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'java-library'
    id 'scala'
}

configurations {
    tests
}

dependencies {
    implementation project(':james-server:james-server-guice:james-server-guice-common')
    implementation project(':james-server:james-server-guice:james-server-guice-jmap')

    //TODO: @ieugen: this uses code from netty 4 and we use netty 3 !!!!
    implementation 'io.netty:netty-codec-http:4.1.48.Final'

    implementation 'org.apache.james:apache-mime4j-dom:0.8.3'
    implementation 'com.typesafe.play:play-json_2.13:2.8.1'
    implementation 'io.rest-assured:rest-assured:4.0.0'
    implementation 'net.javacrumbs.json-unit:json-unit-assertj:2.8.0'

    implementation 'junit:junit:4.13'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.5.1'
}

test {
    useJUnitPlatform()
}

// https://stackoverflow.com/questions/23261075/compiling-scala-before-alongside-java-with-gradle
sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
}

description = 'Apache James :: Server :: JMAP RFC-8621 :: Contract for Integration Testing'

tasks.register('testsJar', Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

publishing.publications.maven.artifact(testsJar)
