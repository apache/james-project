How to build and publish the website:

 1. Install Apache Maven 2.0.6 and make its binary 'mvn' available on your PATH.
 2. Enter parent folder and execute 'mvn -Plocal install'. This will generate the 
    artifacts and install them without trying to remove them from remote repositories
    (by using the "local" profile defined in the pom.xml).
 3. Enter the maven-skin folder and execute 'mvn install'.
 4. Return to the root and execute 'mvn -Plocal site'. This will generate the website for
    each module.
 5. Test the built site in your browser from target/site
 6. If everything looks OK, copy target/site to the checkout of james/site/trunk/www folder
    server/target/site to the checkout of james/site/trunk/www/server folder
    server/2.2.0/target/site to the checkout of james/site/trunk/www/server/2.2.0 folder
 7. If you are on windows make sure endlines are LF only.
 8. Commit changes to SVN
 9. Review generated pages on svn.apache.org/repos/asf/james/site/trunk/www
10. svn-up on minotaur
11. Wait for the changes to replicate to the Apache web server or setup 140.211.11.10:80 as 
    a proxy to review the changes (described here: http://www.apache.org/dev/project-site.html) 

The logical tree of the poms is the following

james-parent (parent/pom.xml) is the main parent.
|- maven-skin (maven-skin/pom.xml) is our skin
'- james-project (pom.xml)
   '- james-server-root (server/pom.xml) is the parent pom for JAMES server.
      '- james-server-2.2.0 (server/2.2.0/pom.xml) is the static website for old 2.2.0 documentation.

The "james-parent" artifact is needed because "james-project" uses the maven-skin but they needed
to share some common data so they cannot depend on each-other but on a third "parent" pom.
