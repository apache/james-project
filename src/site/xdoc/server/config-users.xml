<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>Apache James Server 3 - Users Configuration</title>
 </properties>

<body>

  <section name="Users Repositories">
  
    <subsection name="Introduction">
  
      <p>User repositories are required to store James user information and authentication data</p>
  
      <p>Consult <a href="https://github.com/apache/james-project/tree/master/server/app/src/main/resources/usersrepository.xml">usersrepository.xml</a> in GIT to get some examples and hints.</p>
      
    </subsection>
    
    <subsection name="JPA Users Repository">
  
     <p>JPA (database via OpenJPA) based user repository. This is the default implementation.</p>
     
     <p>The usersrepository tag as 2 attributes: name="LocalUsers" and class="org.apache.james.user.file.UsersFileRepository">
     The class tag should be specified for Spring, but is not taken into acount by Guice.</p>


      <dl>
        <dt><strong>algorithm</strong></dt>
        <dd>Algorithm to hash passwords. Supported password algorithm are: MD5, SHA-256, SHA-512, NONE(then SHA-1 will be used).</dd>
        <dd>MD5 and SHA-1 are deprecated.</dd>
        <dt><strong>enableVirtualHosting</strong></dt>
        <dd>true (default) or false. Defines if the usernames must (true) or may not contain (false) a domain part (user@domain.tld).</dd>
      </dl>

    </subsection>

    <subsection name="File Users Repository">
  
      <p>The File UsersRepository implementations below are DEPRECATED and will get removed in the next release</p>
      <p>It just listed here for backward-compatibility</p>

      <p>File-based user repositories  Use these configurations to store user info in the filesystem.</p>
      
     <p>The usersrepository tag as 2 attributes:name="LocalUsers" class="org.apache.james.user.file.UsersFileRepository"></p>

      <dl>
        <dt><strong>destination</strong></dt>
        <dd>Example: file://var/users/.</dd>
        <dt><strong>ignoreCase</strong></dt>
        <dd>true or false.</dd>
        <dt><strong>enableAliases</strong></dt>
        <dd>true or false.</dd>
        <dt><strong>enableForwarding</strong></dt>
        <dd>true or false.</dd>
        <dt><strong>enableVirtualHosting</strong></dt>
        <dd>true (default) or false. Defines if the usernames must (true) or may not contain (false) a domain part (user@domain.tld).</dd>
      </dl>

    </subsection>

    <subsection name="JDBC Users Repository">
    
      <p>The JDBC UsersRepository implementations below are DEPRECATED and will get removed in the next release.</p>
      <p>It just listed here for backward-compatibility.</p>

    </subsection>

    <subsection name="LDAP Users Repository">
    
       <p>Read-Only LDAP based UsersRepository</p>
     
       <p>Example:</p>

       <source>
&lt;repository name="LocalUsers" class="org.apache.james.user.ldap.ReadOnlyUsersLDAPRepository" ldapHost="ldap://myldapserver:389" 
    principal="uid=ldapUser,ou=system" credentials="password" userBase="ou=People,o=myorg.com,ou=system" userIdAttribute="uid"/&gt;</source>

     </subsection>

  </section>

</body>

</document>
