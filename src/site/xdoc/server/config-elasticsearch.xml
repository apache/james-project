<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>Apache James Server 3 - ElasticSearch Configuration</title>
 </properties>

<body>

  <section name="ElasticSearch Configuration">

      This configuration applies only to Guice wiring.

    <p>Consult <a href="https://github.com/apache/james-project/blob/master/server/apps/distributed-app/sample-configuration/elasticsearch.properties">elasticsearch.properties</a> to get some examples and hints.</p>

      Connection to a cluster :

      <dl>
          <dt><strong>elasticsearch.masterHost</strong></dt>
          <dd>Is the IP (or host) of the ElasticSearch master</dd>
          <dt><strong>elasticsearch.port</strong></dt>
          <dd>Is the port of ElasticSearch master</dd>

          <dt><strong>elasticsearch.hostScheme</strong></dt>
          <dd>
              Optional. Only http or https are accepted, default is http. In case of <strong>https</strong>,
              and you want to override the default SSL Validation behavior of the client,
              consult the section <strong>SSL Trusting Configuration</strong> for more details.
          </dd>

          <dt><strong>elasticsearch.user</strong></dt>
          <dd>
              Optional.
              Basic auth username to access elasticsearch.
              Ignore elasticsearch.user and elasticsearch.password to not be using authentication (default behaviour).
              Otherwise, you need to specify both properties.
          </dd>

          <dt><strong>elasticsearch.password</strong></dt>
          <dd>
              Optional.
              Basic auth password to access elasticsearch.
              Ignore elasticsearch.user and elasticsearch.password to not be using authentication (default behaviour).
              Otherwise, you need to specify both properties.
          </dd>
      </dl>

      Or you can connect a cluster by :

      <dl>
          <dt><strong>elasticsearch.hosts</strong></dt>
          <dd>List of comma separated hosts. An host is composed of an address and a port separated by a ':'. Example : elasticsearch.hosts=host1:9200,host2:9200</dd>
      </dl>

      Other options includes :

      <dl>
          <dt><strong>elasticsearch.clusterName</strong></dt>
          <dd>Is the name of the cluster used by James.</dd>
          <dt><strong>elasticsearch.nb.shards</strong></dt>
          <dd>Number of shards for index provisionned by James</dd>
          <dt><strong>elasticsearch.nb.replica</strong></dt>
          <dd>Number of replica for index provisionned by James (default: 0)</dd>
          <dt><strong>elasticsearch.index.waitForActiveShards (default: 1)</strong></dt>
          <dd>Wait for a certain number of active shard copies before proceeding with the operation.</dd>
          <dd>You may consult the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docs-index_.html#active-shards">documentation</a> for more information.</dd>
          <dt><strong>elasticsearch.index.mailbox.name</strong></dt>
          <dd>Name of the mailbox index backed by the alias. It will be created if missing.</dd>
          <dt><strong>elasticsearch.index.name</strong></dt>
          <dd><strong>Deprecated</strong> Use <strong>elasticsearch.index.mailbox.name</strong> instead. <br/>
              Name of the mailbox index backed by the alias. It will be created if missing.</dd>
          <dt><strong>elasticsearch.alias.read.mailbox.name</strong></dt>
          <dd>Name of the alias to use by Apache James for mailbox reads. It will be created if missing.
              The target of the alias is the index name configured above.</dd>
          <dt><strong>elasticsearch.alias.read.name</strong></dt>
          <dd><strong>Deprecated</strong> Use <strong>elasticsearch.alias.read.mailbox.name</strong> instead. <br/>
              Name of the alias to use by Apache James for mailbox reads. It will be created if missing.
              The target of the alias is the index name configured above.</dd>
          <dt><strong>elasticsearch.alias.write.mailbox.name</strong></dt>
          <dd>Name of the alias to use by Apache James for mailbox writes. It will be created if missing.
              The target of the alias is the index name configured above.</dd>
          <dt><strong>elasticsearch.alias.write.name</strong></dt>
          <dd><strong>Deprecated</strong> Use <strong>elasticsearch.alias.write.mailbox.name</strong> instead. <br/>
              Name of the alias to use by Apache James for mailbox writes. It will be created if missing.
              The target of the alias is the index name configured above.</dd>
          <dt><strong>elasticsearch.retryConnection.maxRetries</strong></dt>
          <dd>Number of retries when connecting the cluster</dd>
          <dt><strong>elasticsearch.retryConnection.minDelay</strong></dt>
          <dd>Minimum delay between connection attempts</dd>
          <dt><strong>elasticsearch.indexAttachments</strong></dt>
          <dd>Indicates if you wish to index attachments or not (default: true).</dd>
          <dt><strong>elasticsearch.index.quota.ratio.name</strong></dt>
          <dd>Specify the ElasticSearch alias name used for quotas</dd>
          <dt><strong>elasticsearch.alias.read.quota.ratio.name</strong></dt>
          <dd>Specify the ElasticSearch alias name used for reading quotas</dd>
          <dt><strong>elasticsearch.alias.write.quota.ratio.name</strong></dt>
          <dd>Specify the ElasticSearch alias name used for writing quotas</dd>
      </dl>

      <p>
          ElasticSearch component can be disabled but consider it would make search feature to not work. In particular it will break JMAP protocol and SEARCH IMAP comment in an nondeterministic way.
          This is controlled in the <code>search.properties</code> file via the <code>implementation</code> property (defaults
          to <code>ElasticSearch</code>). Setting this configuration parameter to <code>scanning</code> will effectively disable ElasticSearch, no
          further indexation will be done however searches will rely on the scrolling search, leading to expensive and longer
          searches. Disabling ElasticSearch requires no extra action, however
          <a href="https://github.com/apache/james-project/blob/master/src/site/markdown/server/manage-webadmin.md#reindexing-all-mails">
              a full re-indexing</a> needs to be carried out when enabling ElasticSearch.
      </p>

      For configuring the metric reporting on ElasticSearch :

      <p>
          In server version 3.6.1 james moved from Elasticsearch 6 to 7 and the metric reporting on Elasticsearch is deprecated.
          You can still use metric reporting on Elasticsearch but that requires you to run a separate Elasticsearch 6 instance and use that in your Elasticsearch metric reporting configuration.
      </p>

      <dl>
          <dt><strong>elasticsearch.http.host</strong></dt>
          <dd>Host to report metrics on. Defaults to master host. Compatible with 6.x hosts</dd>

          <dt><strong>elasticsearch.http.port</strong></dt>
          <dd>Http port to use for publishing metrics</dd>

          <dt><strong>elasticsearch.metrics.reports.enabled</strong></dt>
          <dd>Boolean value. Enables metrics reporting.</dd>

          <dt><strong>elasticsearch.metrics.reports.period</strong></dt>
          <dd>Seconds between metric reports</dd>

          <dt><strong>elasticsearch.metrics.reports.index</strong></dt>
          <dd>Index to publish metrics on</dd>
      </dl>

<p>If you want more explanation about ElasticSearch configuration, you should visit the dedicated <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html">documentation</a>.</p>

  </section>

    <section name="Tika Configuration">

        <p>When using ElasticSearch, you can configure an external Tika server for extracting and indexing text from attachments.
            Thus you can significantly improve user experience upon text searches.</p>

        <p>Note that to use this feature you need Guice, built with ElasticSearch</p>

        <p>Consult <a href="https://github.com/apache/james-project/blob/master/server/apps/distributed-app/sample-configuration/tika.properties">tika.properties</a> to get some examples and hints.</p>

        Here are the different properties:

        <dl>
            <dt><strong>tika.enabled</strong></dt>
            <dd>Should Tika text extractor be used? <br/>
            If true, the TikaTextExtractor will be used behind a cache. <br/>
            If false, the DefaultTextExtractor will be used (naive implementation only supporting text).<br/>
            Defaults to false.</dd>

            <dt><strong>tika.host</strong></dt>
            <dd>IP or domain name of your Tika server. The default value is 127.0.0.1</dd>

            <dt><strong>tika.port</strong></dt>
            <dd>Port of your tika server. The default value is 9998</dd>

            <dt><strong>tika.timeoutInMillis</strong></dt>
            <dd>Timeout when issuing request to the tika server. The default value is 3 seconds.</dd>

            <dt><strong>tika.cache.eviction.period</strong></dt>
            <dd>A cache is used to avoid, when possible, query Tika multiple time for the same attachments. <br/>
            This entry determines how long after the last read an entry vanishes.<br/>
            Please note that units are supported (ms - millisecond, s - second, m - minute, h - hour, d - day). Default unit is seconds. <br/>
            Default value is <b>1 day</b></dd>

            <dt><strong>tika.cache.enabled</strong></dt>
            <dd>Should the cache be used? False by default</dd>

            <dt><strong>tika.cache.weight.max</strong></dt>
            <dd>Maximum weight of the cache.<br/>
            A value of <b>0</b> disables the cache<br/>
            Please note that units are supported (K for KB, M for MB, G for GB). Defaults is no units, so in bytes.<br/>
            Default value is <b>100 MB</b>.</dd>

            <dt><strong>tika.contentType.blacklist</strong></dt>
            <dd>Blacklist of content type is known-to-be-failing with Tika. Specify the list with comma separator.</dd>
        </dl>

        Note: You can launch a tika server using this command line:

        <code><pre>docker run --name tika linagora/docker-tikaserver:1.24</pre></code>

    </section>

    <section name="SSL Trusting Configuration">

        <p>
            By default James will use the system TrustStore to validate https server certificates, if the certificate on
            ES side is already in the system TrustStore, you can leave the sslValidationStrategy property empty or set it to default.
        </p>

        <dl>
            <dt><strong>elasticsearch.hostScheme.https.sslValidationStrategy</strong></dt>
            <dd>
              Optional. Accept only <strong>default</strong>, <strong>ignore</strong>, <strong>override</strong>. Default is <strong>default</strong>
            </dd>
            <dd>
                default: Use the default SSL TrustStore of the system.
                ignore: Ignore SSL Validation check (not recommended).
                override: Override the SSL Context to use a custom TrustStore containing ES server's certificate.
            </dd>
        </dl>

        <p>
            In some cases, you want to secure the connection from clients to ES by setting up a <strong>https</strong> protocol
            with a self signed certificate. And you prefer to left the system ca-certificates un touch.
            There are possible solutions to let the ES RestHighLevelClient to trust your self signed certificate.
        </p>
        <p>
            First solution: ignoring SSL check.
            In case you want to ignore the SSL check, simply, just don't specify below options. Otherwise, configuring the trust
            requires some prerequisites and they are explained in below block.
        </p>
        <p>
            Second solution: importing a TrustStore containing the certificate into SSL context.
            A certificate normally contains two parts: a public part in .crt file, another private part in .key file.
            To trust the server, the client needs to be acknowledged that the server's certificate is in the list of
            client's TrustStore. Basically, you can create a local TrustStore file containing the public part of a remote server
            by execute this command:
        </p>

        <code><pre>
            keytool -import -v -trustcacerts -file certificatePublicFile.crt -keystore trustStoreFileName.jks -keypass fillThePassword -storepass fillThePassword
        </pre></code>

        <p>
            When there is a TrustStore file and the password to read, fill two options <strong>trustStorePath</strong>
            and <strong>trustStorePassword</strong> with the TrustStore location and the password. ES client will accept
            the certificate of ES service.
        </p>

        <dl>
            <dt><strong>elasticsearch.hostScheme.https.trustStorePath</strong></dt>
            <dd>
              Optional. Use it when https is configured in elasticsearch.hostScheme, and sslValidationStrategy is <strong>override</strong>
              Configure Elasticsearch rest client to use this trustStore file to recognize nginx's ssl certificate.
              Once you chose <strong>override</strong>, you need to specify both trustStorePath and trustStorePassword.
            </dd>

            <dt><strong>elasticsearch.hostScheme.https.trustStorePassword</strong></dt>
            <dd>
              Optional. Use it when https is configured in elasticsearch.hostScheme, and sslValidationStrategy is <strong>override</strong>
              Configure Elasticsearch rest client to use this trustStore file with the specified password.
              Once you chose <strong>override</strong>, you need to specify both trustStorePath and trustStorePassword.
            </dd>
        </dl>

        <p>
            During SSL handshaking, the client can determine whether accept or reject connecting to a remote server by its hostname.
            You can configure to use which HostNameVerifier in the client.
        </p>
        <dl>
            <dt><strong>elasticsearch.hostScheme.https.hostNameVerifier</strong></dt>
            <dd>
              Optional. Default is <strong>default</strong>.
            </dd>
            <dd>
              default: using the default hostname verifier provided by apache http client.
              accept_any_hostname: accept any host (not recommended).
            </dd>
        </dl>
    </section>
</body>

</document>
